import timefrom get_time import get_timefrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support.wait import WebDriverWaitfrom selenium.webdriver.support import expected_conditions as ECfrom selenium.webdriver.chrome.options import Optionsimport undetected_chromedriverproduct_links = []start_time = time.time()def get_product_links(gender, link):    product_links.clear()    option = Options()    # option.headless = True    driver = undetected_chromedriver.Chrome(options=option)    try:        driver.get(link)        try: product_count = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CLASS_NAME, 'sm-catalog__title__product-count'))).get_attribute('textContent')        except: return        print(product_count)        # product_links_proto = driver.find_elements(By.CLASS_NAME, 'catalog__item')        # for link_one_page in product_links_proto:        #     product_links.append(link_one_page.get_attribute('href'))        # print(gender, f'Ссылки с 1 page собраны!')        # for product_link in range(2, int(page_count) + 1):        #     if gender == 'men': driver.get(f'https://lgcity.ru/men/boss-or-armani_exchange-or-hugo-or-emporio_armani-or-karl_lagerfeld-or-bikkembergs-or-ea7_emporio_armani-or-bugatti-or-trussardi-or-guess-or-marc_opolo/sale_ok/order_price-asc/page_{product_link}/')        #     if gender == 'women': driver.get(f'https://lgcity.ru/women/boss-or-armani_exchange-or-hugo-or-emporio_armani-or-ice_play-or-liu_jo-or-tommy_hilfiger-or-gerry_weber-or-love_moschino-or-ea7_emporio_armani-or-gerry_weber_edition-or-replay-or-trussardi-or-guess/sale_ok/page_{product_link}/')        #     try: WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CLASS_NAME, 'catalog__pagination-last')))        #     except: continue        #     product_links_on_page = driver.find_elements(By.CLASS_NAME, 'catalog__item')        #     for link_other_page in product_links_on_page:        #         product_links.append(link_other_page.get_attribute('href'))        #     print(gender, f'Ссылки с {product_link} page собраны!')        # driver.close()        # driver.quit()        # print('Ссылки на товары собраны за', f'{get_time(round(time.time() - start_time))}')        # links = product_links.copy()        # product_links.clear()        # return {        #     'product_links': links,        #     'status': f'Ссылки на товары собраны через {get_time(round(time.time() - start_time))} от начала'        # }    except Exception as ex:        print(ex)        return {}